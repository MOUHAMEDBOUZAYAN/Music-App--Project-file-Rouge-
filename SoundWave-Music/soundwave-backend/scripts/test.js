#!/usr/bin/env node

/**
 * Script ูุชุดุบูู ุงุฎุชุจุงุฑุงุช SoundWave Backend
 * 
 * ุงูุงุณุชุฎุฏุงู:
 * node scripts/test.js [options]
 * 
 * ุงูุฎูุงุฑุงุช:
 * --watch: ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช ูุน ุงููุฑุงูุจุฉ
 * --coverage: ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช ูุน ุชูุฑูุฑ ุงูุชุบุทูุฉ
 * --models: ุชุดุบูู ุงุฎุชุจุงุฑุงุช ุงูููุฏููุงุช ููุท
 * --integration: ุชุดุบูู ุงุฎุชุจุงุฑุงุช ุงูุชูุงูู ููุท
 * --verbose: ุนุฑุถ ุชูุงุตูู ุฃูุซุฑ
 */

const { spawn } = require('child_process');
const path = require('path');

// ุชุญููู ุงููุนุงููุงุช
const args = process.argv.slice(2);
const options = {
  watch: args.includes('--watch'),
  coverage: args.includes('--coverage'),
  models: args.includes('--models'),
  integration: args.includes('--integration'),
  verbose: args.includes('--verbose')
};

// ุจูุงุก ุฃูุฑ Jest
const jestArgs = ['jest'];

if (options.watch) {
  jestArgs.push('--watch');
}

if (options.coverage) {
  jestArgs.push('--coverage');
}

if (options.verbose) {
  jestArgs.push('--verbose');
}

// ุชุญุฏูุฏ ููุน ุงูุงุฎุชุจุงุฑุงุช
if (options.models) {
  jestArgs.push('tests/models/');
} else if (options.integration) {
  jestArgs.push('tests/integration/');
}

// ุฅุถุงูุฉ ุฅุนุฏุงุฏุงุช ุฅุถุงููุฉ
jestArgs.push('--detectOpenHandles');
jestArgs.push('--forceExit');

console.log('๐ ุชุดุบูู ุงุฎุชุจุงุฑุงุช SoundWave Backend...');
console.log('๐ ุงูุฎูุงุฑุงุช ุงููุญุฏุฏุฉ:', options);
console.log('โ๏ธ  ุฃูุฑ Jest:', jestArgs.join(' '));
console.log('');

// ุชุดุบูู Jest
const jestProcess = spawn('npx', jestArgs, {
  stdio: 'inherit',
  cwd: path.join(__dirname, '..'),
  shell: true
});

jestProcess.on('close', (code) => {
  if (code === 0) {
    console.log('');
    console.log('โ ุชู ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช ุจูุฌุงุญ!');
    
    if (options.coverage) {
      console.log('๐ ุชูุฑูุฑ ุงูุชุบุทูุฉ ูุชุงุญ ูู: coverage/index.html');
    }
  } else {
    console.log('');
    console.log('โ ูุดู ูู ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช');
    process.exit(code);
  }
});

jestProcess.on('error', (error) => {
  console.error('โ ุฎุทุฃ ูู ุชุดุบูู Jest:', error.message);
  process.exit(1);
});

// ูุนุงูุฌุฉ ุฅุดุงุฑุฉ ุงูุฅููุงู
process.on('SIGINT', () => {
  console.log('\n๐ ุฅููุงู ุงูุงุฎุชุจุงุฑุงุช...');
  jestProcess.kill('SIGINT');
});

process.on('SIGTERM', () => {
  console.log('\n๐ ุฅููุงู ุงูุงุฎุชุจุงุฑุงุช...');
  jestProcess.kill('SIGTERM');
});
